{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./scripts/vectors.ts","webpack:///./styles/main.sass"],"names":["CellContent","Cell","reset","_content","empty","_object","undefined","obj","content","console","log","randomIndex","array","Math","floor","random","length","randomArrayItem","randomEnumItem","anEnum","enumValues","Object","values","Game","opts","canvas","document","getElementById","ctx","getContext","gridSize","cellsCount","x","y","snakes","grid","resizeCanvas","speed","maxFoodCount","foodSpawnChance","food","error","currentFoodCount","maxDiamondsCount","diamondSpawnChance","diamond","currentDiamondCount","window","onmousemove","e","eventFunc","r","getBoundingClientRect","currentMousePosition","Vector2","clientX","left","right","width","clientY","top","bottom","height","currentCell","cellSize","isInsideBounds","currentMouseCell","previousMouseCell","equals","onCellHover","interval","setInterval","snake","onStep","randomFood","spawnRate","spawn","clearInterval","pos","randomEmptyCell","setCell","segments","segment","getCell","position","notEmpty","push","i","cell","image","drawImage","fill","object","color","fillStyle","setFillStyle","fillRect","warn","clearRect","w","h","ratio","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","style","setTransform","min","Food","cost","img","Image","src","onload","Diamond","SnakeSegment","Snake","game","headPos","direction","score","Direction","Array","moveByDirection","returnInsideBounds","spawnSnake","onkeydown","repeat","key","inputDirection","reverseDirection","newHead","moveTo","last","cutFromTail","unshift","border","pause","displaySore","tailLength","tail","tailEnd","pop","clear","scoreField","innerText","canvasId","play","vec","dx","abs","dy","sqrt","other"],"mappings":"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","file":"main..js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// If you want style your pure spaghetti html\r\nimport './styles/main.sass';\r\n\r\n// True typescript file imports\r\nimport {Direction, Vector2} from './scripts/vectors';\r\n\r\nenum CellContent {\r\n    empty = 0,\r\n    border = 1,\r\n    snake = 2,\r\n    food = 3,\r\n    diamond = 4\r\n}\r\n\r\n\r\nclass Cell {\r\n    private _content: CellContent;\r\n    private _object: IPlaceable;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    get content(): CellContent {\r\n        return this._content;\r\n    }\r\n\r\n    set object(obj: IPlaceable) {\r\n        this._content = obj.content;\r\n        this._object = obj;\r\n        console.log(obj);\r\n    }\r\n\r\n    reset(): void {\r\n        this._content = CellContent.empty;\r\n        this._object = undefined;\r\n    }\r\n\r\n    notEmpty(): boolean {\r\n        return this._content !== CellContent.empty;\r\n    }\r\n}\r\n\r\n\r\ninterface IPlaceable {\r\n    content: CellContent;\r\n    image: any;\r\n    cost: number;\r\n    spawnRate: number;\r\n}\r\n\r\nfunction randomIndex<T>(array: T[]): number {\r\n    if (array) return Math.floor(Math.random() * array.length);\r\n    else return undefined;\r\n}\r\n\r\nfunction randomArrayItem<T>(array: T[]): T {\r\n    if (!array) return undefined;\r\n    return array[randomIndex(array)];\r\n}\r\n\r\nfunction randomEnumItem<T>(anEnum: T): T[keyof T] {\r\n    const enumValues = (Object.values(anEnum) as unknown) as T[keyof T][];\r\n    return randomArrayItem(enumValues);\r\n}\r\n\r\n\r\ninterface IGameOptions {\r\n    canvasId: string;\r\n    gridSize: Vector2;\r\n\r\n    food: Food[];\r\n    maxFoodCount: number;\r\n    foodSpawnChance: number;\r\n\r\n    diamond: Diamond;\r\n    maxDiamondsCount: number;\r\n    diamondSpawnChance: number;\r\n}\r\n\r\nclass Game {\r\n    public currentMousePosition: Vector2;\r\n    public previousMouseCell: Vector2;\r\n    public currentMouseCell: Vector2;\r\n    public speed: number;\r\n\r\n    private readonly canvas: HTMLCanvasElement;\r\n    private readonly ctx: CanvasRenderingContext2D;\r\n    private readonly cellsCount: number;\r\n    private gridSize: Vector2;\r\n    private cellSize: number;\r\n\r\n    private readonly grid: Cell[][];\r\n    private readonly snakes: Snake[];\r\n    private interval: any;\r\n\r\n    private food: Food[];\r\n    private maxFoodCount: number;\r\n    private foodSpawnChance: number;\r\n    public currentFoodCount: number;\r\n\r\n    private diamond: Diamond;\r\n    private maxDiamondsCount: number;\r\n    private diamondSpawnChance: number;\r\n    public currentDiamondCount: number;\r\n\r\n\r\n    constructor(opts: IGameOptions) {\r\n        this.canvas = document.getElementById(opts['canvasId']) as HTMLCanvasElement;\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.gridSize = opts['gridSize'];\r\n        this.cellsCount = this.gridSize.x * this.gridSize.y;\r\n        this.snakes = [];\r\n\r\n        this.grid = [];\r\n        for (let y = 0; y < this.gridSize.y; y++) {\r\n            this.grid[y] = [];\r\n            for (let x = 0; x < this.gridSize.x; x++) {\r\n                this.grid[y][x] = new Cell();\r\n            }\r\n        }\r\n\r\n        this.resizeCanvas(500, 500);\r\n        this.speed = 1;\r\n\r\n        this.maxFoodCount = opts['maxFoodCount'];\r\n        this.foodSpawnChance = opts['foodSpawnChance'];\r\n        this.food = opts['food'];\r\n        if (!this.food) console.error('Food not defined!');\r\n        this.currentFoodCount = 0;\r\n\r\n        this.maxDiamondsCount = opts['maxDiamondsCount'];\r\n        this.diamondSpawnChance = opts['diamondSpawnChance'];\r\n        this.diamond = opts['diamond'];\r\n        if (!this.diamond) console.error('Diamond not defined!');\r\n        this.currentDiamondCount = 0;\r\n\r\n        window.onmousemove = e => {\r\n            const eventFunc = (canvas: HTMLCanvasElement) => {\r\n                const r = canvas.getBoundingClientRect() as DOMRect;\r\n                this.currentMousePosition = new Vector2(\r\n                    (e.clientX - r.left) / (r.right - r.left) * canvas.width,\r\n                    (e.clientY - r.top) / (r.bottom - r.top) * canvas.height\r\n                );\r\n\r\n                const currentCell = new Vector2(\r\n                    Math.floor(this.currentMousePosition.x / this.cellSize),\r\n                    Math.floor(this.currentMousePosition.y / this.cellSize)\r\n                );\r\n\r\n                if (!this.isInsideBounds(currentCell)) return;\r\n                this.currentMouseCell = currentCell;\r\n\r\n                if (this.previousMouseCell == undefined ||\r\n                    this.currentMouseCell.equals(this.previousMouseCell)) {\r\n                    this.previousMouseCell = this.currentMouseCell;\r\n                    this.onCellHover();\r\n                }\r\n            };\r\n            eventFunc(this.canvas);\r\n        };\r\n    }\r\n\r\n\r\n    public play(): void {\r\n        console.log('Game started.');\r\n\r\n        this.interval = setInterval(() => {\r\n            for (const snake of this.snakes) {\r\n                snake.onStep();\r\n\r\n                if (this.currentFoodCount < this.maxFoodCount) {\r\n                    const randomFood = randomArrayItem(this.food);\r\n                    if (this.currentFoodCount == 0 ||\r\n                        randomFood.spawnRate > Math.random()) {\r\n                        this.spawn(randomFood);\r\n                        this.currentFoodCount++;\r\n                    }\r\n                } else console.log('currentFoodCount < maxFoodCount: ', this.currentFoodCount, this.maxFoodCount);\r\n            }\r\n        }, 1000 / this.speed);\r\n    }\r\n\r\n    public pause(): void {\r\n        console.log('Game paused.');\r\n\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    public spawn(obj: IPlaceable, pos: Vector2 = null): void {\r\n        if (obj.content === CellContent.snake) {\r\n            console.error('Do not use \"spawn\" method to spawn snakes.' +\r\n                ' You should use special \"spawnSnake\" method.');\r\n            return;\r\n        }\r\n        if (pos == null) pos = this.randomEmptyCell();\r\n        if (pos == null) console.error('Cannot find empty cell :(');\r\n        this.setCell(pos, obj);\r\n    }\r\n\r\n    public spawnSnake(snake: Snake): boolean {\r\n        for (const segment of snake.segments) {\r\n            if (this.getCell(segment.position).notEmpty()) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        this.snakes.push(snake);\r\n        for (const segment of snake.segments) {\r\n            this.setCell(segment.position, segment);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public randomEmptyCell(): Vector2 {\r\n        let i = 0;\r\n        let cell: Vector2 = null;\r\n\r\n        do {\r\n            const y = randomIndex(this.grid);\r\n            cell = new Vector2(y, randomIndex(this.grid[y]));\r\n        } while (i++ < this.cellsCount * 0.2 &&\r\n        this.getCell(cell).notEmpty());\r\n\r\n        if (this.getCell(cell).notEmpty()) return null;\r\n        return cell;\r\n    }\r\n\r\n    public getCell(pos: Vector2): Cell {\r\n        if (this.isInsideBounds(pos)) return this.grid[pos.y][pos.x];\r\n    }\r\n\r\n    public setCell(pos: Vector2, obj: IPlaceable): void {\r\n        if (obj.image) this.drawImage(pos, obj.image);\r\n        else this.fill(pos);\r\n        if (this.isInsideBounds(pos)) this.grid[pos.y][pos.x].object = obj;\r\n    }\r\n\r\n    public setFillStyle(color: string): void {\r\n        this.ctx.fillStyle = color;\r\n    }\r\n\r\n    public fill(pos: Vector2, color = null): void {\r\n        if (color !== null) this.setFillStyle(color);\r\n        this.ctx.fillRect(\r\n            this.cellSize * pos.x, this.cellSize * pos.y,\r\n            this.cellSize, this.cellSize);\r\n    }\r\n\r\n    public drawImage(pos: Vector2, image: CanvasImageSource) {\r\n        if (image == null) console.warn('Image source not defined.');\r\n        console.log(pos, ' image: ', image);\r\n        this.ctx.drawImage(image,\r\n            this.cellSize * pos.x, this.cellSize * pos.y,\r\n            this.cellSize, this.cellSize);\r\n    }\r\n\r\n    public clear(pos: Vector2 = null): void {\r\n        if (pos == null) this.ctx.clearRect(0, 0,\r\n            this.canvas.width, this.canvas.height);\r\n        else {\r\n            this.ctx.clearRect(\r\n                this.cellSize * pos.x, this.cellSize * pos.y,\r\n                this.cellSize, this.cellSize);\r\n            this.grid[pos.y][pos.x].reset();\r\n        }\r\n    }\r\n\r\n    public isInsideBounds(pos: Vector2): boolean {\r\n        if (pos == undefined) return false;\r\n        return pos.x >= 0 && pos.x < this.gridSize.x\r\n            && pos.y >= 0 && pos.y < this.gridSize.y;\r\n    }\r\n\r\n    public returnInsideBounds(pos: Vector2) {\r\n        let x: number, y: number;\r\n\r\n        if (pos.x < 0) x = this.gridSize.x - 1;\r\n        else if (pos.x >= this.gridSize.x) x = 0;\r\n        else x = pos.x;\r\n\r\n        if (pos.y < 0) y = this.gridSize.y - 1;\r\n        else if (pos.y >= this.gridSize.y) y = 0;\r\n        else y = pos.y;\r\n\r\n        return new Vector2(x, y);\r\n    }\r\n\r\n    public onCellHover(): void {\r\n    }\r\n\r\n    private resizeCanvas(w: number, h: number) {\r\n        const ratio = ((ctx: any) => {\r\n            const dpr = window.devicePixelRatio || 1;\r\n            const bsr = ctx.webkitBackingStorePixelRatio ||\r\n                ctx.mozBackingStorePixelRatio ||\r\n                ctx.msBackingStorePixelRatio ||\r\n                ctx.oBackingStorePixelRatio ||\r\n                ctx.backingStorePixelRatio || 1;\r\n\r\n            return dpr / bsr;\r\n        })(this.ctx);\r\n\r\n        this.canvas.width = w * ratio;\r\n        this.canvas.height = h * ratio;\r\n        this.canvas.style.width = w + \"px\";\r\n        this.canvas.style.height = h + \"px\";\r\n\r\n        this.ctx.setTransform(ratio, 0, 0, ratio, 0, 0);\r\n        this.cellSize = Math.min(\r\n            this.canvas.width / this.gridSize.x,\r\n            this.canvas.height / this.gridSize.y);\r\n    }\r\n}\r\n\r\n\r\nclass Food implements IPlaceable {\r\n    public content: CellContent;\r\n    public spawnRate: number;\r\n\r\n    public cost: number;\r\n    public image: any;\r\n\r\n    constructor(image: string, cost: number) {\r\n        if (typeof image == 'string') {\r\n            const img = new Image();\r\n            img.src = image;\r\n            img.onload = () => {\r\n                this.image = img;\r\n            }\r\n        }\r\n        this.cost = cost;\r\n        this.content = CellContent.food;\r\n    }\r\n}\r\n\r\nclass Diamond implements IPlaceable {\r\n    public content: CellContent;\r\n    public spawnRate: number;\r\n\r\n    public cost: number;\r\n    public image: any;\r\n\r\n    constructor(image: string, cost: number) {\r\n        if (typeof image == 'string') {\r\n            const img = new Image();\r\n            img.src = image;\r\n            img.onload = () => {\r\n                this.image = img;\r\n            }\r\n        }\r\n        this.cost = cost;\r\n        this.content = CellContent.diamond;\r\n    }\r\n}\r\n\r\n\r\nclass SnakeSegment implements IPlaceable {\r\n    public content: CellContent;\r\n    public image: any;\r\n    public position: Vector2;\r\n    public snake: Snake;\r\n\r\n    constructor(snake: Snake, pos: Vector2) {\r\n        this.content = CellContent.snake;\r\n        this.position = pos;\r\n        this.snake = snake;\r\n    }\r\n\r\n    cost: number;\r\n    spawnRate: number;\r\n}\r\n\r\n\r\nclass Snake {\r\n    public readonly segments: SnakeSegment[];\r\n    private readonly game: Game;\r\n    private direction: Direction;\r\n    private inputDirection: Direction;\r\n    private score: number;\r\n\r\n    constructor(game: Game, length = 1, headPos: Vector2 = undefined,\r\n                direction: Direction = undefined) {\r\n        if (headPos == undefined) headPos = game.randomEmptyCell();\r\n        if (length <= 0) length = 1;\r\n\r\n        this.game = game;\r\n        this.score = 0;\r\n\r\n        this.direction = direction || randomEnumItem(Direction);\r\n        this.segments = new Array(length);\r\n        for (let i = 0; i < length; i++) {\r\n            let pos = headPos.moveByDirection(this.direction);\r\n            if (!this.game.isInsideBounds(pos))\r\n                pos = this.game.returnInsideBounds(pos);\r\n\r\n            this.game.fill(pos);\r\n            this.segments[i] = new SnakeSegment(this, pos);\r\n        }\r\n\r\n        game.spawnSnake(this);\r\n\r\n        window.onkeydown = (e: KeyboardEvent) => {\r\n            if (e.repeat) return;\r\n\r\n            // console.log(e.key);\r\n\r\n            switch (e.key) {\r\n                case \"w\":\r\n                case \"ArrowUp\":\r\n                case \"Up\":\r\n                    this.inputDirection = Direction.top;\r\n                    break;\r\n\r\n                case \"a\":\r\n                case \"ArrowLeft\":\r\n                case \"Left\":\r\n                    this.inputDirection = Direction.left;\r\n                    break;\r\n\r\n                case \"s\":\r\n                case \"ArrowDown\":\r\n                case \"Down\":\r\n                    this.inputDirection = Direction.bottom;\r\n                    break;\r\n\r\n                case \"d\":\r\n                case \"ArrowRight\":\r\n                case \"Right\":\r\n                    this.inputDirection = Direction.right;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public onStep() {\r\n        if (this.inputDirection == undefined ||\r\n            this.inputDirection === this.reverseDirection()) return;\r\n\r\n        let newHead = this.segments[0].position.moveByDirection(this.inputDirection);\r\n        if (!this.game.isInsideBounds(newHead))\r\n            newHead = this.game.returnInsideBounds(newHead);\r\n\r\n        this.moveTo(newHead);\r\n\r\n        this.direction = this.inputDirection;\r\n    }\r\n\r\n    private moveTo(newHead: Vector2): void {\r\n        const last: SnakeSegment = this.cutFromTail()[0];\r\n        last.position = newHead;\r\n        this.segments.unshift(last);\r\n\r\n        const cell = this.game.getCell(newHead);\r\n        switch (cell.content) {\r\n            case CellContent.snake:\r\n            case CellContent.border:\r\n                this.game.pause();\r\n                break;\r\n\r\n            case CellContent.food:\r\n            case CellContent.diamond:\r\n                this.score += cell.object.cost;\r\n                displaySore(this.score);\r\n                break;\r\n\r\n            default:\r\n                this.game.setCell(newHead, last);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private cutFromTail(tailLength = 1): SnakeSegment[] {\r\n        const tail: SnakeSegment[] = [];\r\n        for (let i = 0; i < tailLength && i < this.segments.length; i++) {\r\n            const tailEnd = this.segments.pop();\r\n            this.game.clear(tailEnd.position);\r\n            tail.push(tailEnd);\r\n        }\r\n        return tail;\r\n    }\r\n\r\n    private reverseDirection() {\r\n        switch (+this.direction) {\r\n            case Direction.top:\r\n                return Direction.bottom;\r\n            case Direction.bottom:\r\n                return Direction.top;\r\n            case Direction.left:\r\n                return Direction.right;\r\n            case Direction.right:\r\n                return Direction.left;\r\n            default:\r\n                console.error(`Unknown direction \"${this.direction}\" -> ${+this.direction}`);\r\n                // throw new Error('Unknown direction: ' + this.direction);\r\n                return Direction.bottom;\r\n        }\r\n    }\r\n}\r\n\r\nconst scoreField = document.getElementById('score-field');\r\n\r\nfunction displaySore(score: any): void {\r\n    scoreField.innerText = score;\r\n}\r\n\r\nconst food = [];\r\nfood.push(new Food('assets/images/029-apple.png', 1));\r\nfood.push(new Food('assets/images/024-grapes.png', 3));\r\nfood.push(new Food('assets/images/026-mushroom-1.png', 7));\r\n\r\nconst game = new Game({\r\n    canvasId: 'game-surface',\r\n    gridSize: new Vector2(25, 25),\r\n\r\n    food: food,\r\n    maxFoodCount: 10,\r\n    foodSpawnChance: 0.1,\r\n\r\n    diamond: new Diamond('assets/images/070-star.png', 10),\r\n    maxDiamondsCount: 0,\r\n    diamondSpawnChance: 0.025\r\n});\r\nconst snake = new Snake(game, 15);\r\ngame.speed = 10;\r\ngame.play();\r\n","export enum Direction {\n    top = 0,\n    right = 1,\n    bottom = 2,\n    left = 3\n}\n\n\nexport class Vector2 {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    //      _____________________________\n    // M = √ |(x2 - x1)^2| + |(y2 - y1)^2|\n    magnitude(vec: Vector2): number {\n        const dx = Math.abs(this.x - vec.x);\n        const dy = Math.abs(this.y - vec.y);\n        return Math.sqrt((dx * dx) + (dy + dy));\n    }\n\n    moveByDirection(direction: Direction): Vector2 {\n        switch (+direction) {\n            case Direction.top:\n                return new Vector2(this.x, this.y - 1);\n            case Direction.right:\n                return new Vector2(this.x + 1, this.y);\n            case Direction.bottom:\n                return new Vector2(this.x, this.y + 1);\n            case Direction.left:\n                return new Vector2(this.x - 1, this.y);\n            default:\n                console.error(`Unknown direction \"${direction}\" -> ${+direction}`);\n                return this;\n        }\n    }\n\n    equals(other: Vector2): boolean {\n        if (other == undefined) return false;\n        return other.x !== this.x || other.y !== this.y;\n    }\n}\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1600681361944\n      var cssReload = require(\"C:/Users/Pangea/Desktop/Canvar/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"reloadAll\":true,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}